#!/usr/bin/env bash

set -o pipefail


while getopts ":k:p:" opt; do
  case $opt in
    k)
      KERNEL="$OPTARG"  # linux, netbsd, nokernel
    ;;

    p)
      PLATFORM="$OPTARG"  # lxc, qemu, wsl
    ;;
  esac
done


# Default kernel and platform
if [[ -z "$KERNEL" ]]; then
  KERNEL=linux
fi

if [[ -z "$PLATFORM" ]]; then
  PLATFORM=qemu
fi


TOOLCHAIN=`node -p "require('nodeos-cross-toolchain')"`
BAREBONES=`node -p "require('nodeos-barebones')"`
INITRAMFS=`node -p "require('nodeos-initramfs')"`
USERSFS=`  node -p "require('nodeos-usersfs')"`

source $TOOLCHAIN/scripts/adjustEnvVars.sh || exit $?


OUT_DIR=`pwd`/out/$CPU_FAMILY/$MACHINE/$PLATFORM

export MACHINE


#
# Build each layer up
#

( cd $BAREBONES && KERNEL=$kERNEL npm install --arch=$NODE_ARCH --production ) &&
( cd $INITRAMFS &&                npm install --arch=$NODE_ARCH --production ) &&
( cd $USERSFS   &&                npm install --arch=$NODE_ARCH --production ) || exit 10


#
# Wrap the system up and pack it
#

BAREBONES=$BAREBONES/out/$CPU
INITRAMFS=$INITRAMFS/out/$CPU
USERSFS=$USERSFS/out/$CPU.tar.gz

STEP_DIR=$OUT_DIR

mkdir -p $STEP_DIR

case $MACHINE in
  pc)
    case $PLATFORM in
      img)
        tar2ext $USERSFS nodeos 1 1 $STEP_DIR/usersfs.img || err 40

        nodeos-bootfs                \
            -F $PLATFORM             \
            -K $BAREBONES/bzImage    \
            -I $INITRAMFS            \
            -O $STEP_DIR/bootfs.img  \
            -U $STEP_DIR/usersfs.img || err 41
      ;;

      iso)
        tar2ext $USERSFS nodeos 1 1 $STEP_DIR/usersfs.img || err 50

        nodeos-bootfs                \
            -F $PLATFORM             \
            -K $BAREBONES/bzImage    \
            -I $INITRAMFS            \
            -O $STEP_DIR/bootfs.iso  \
            -U $STEP_DIR/usersfs.img || err 51
      ;;

      qemu)
        cp $BAREBONES/bzImage $STEP_DIR/kernel            || err 60
        cp $INITRAMFS         $STEP_DIR/initramfs.cpio.gz || err 61

        tar2ext $USERSFS nodeos 1 1 $STEP_DIR/usersfs.img || err 62
      ;;

      *)
        echo -e "${RED}Unknown platform '$PLATFORM'${CLR}"
        err 90
      ;;
    esac
  ;;

  ;;

  *)
    echo -e "${RED}Unknown machine '$MACHINE'${CLR}"
    exit 130
  ;;
esac

ln -sfn $CPU_FAMILY/$MACHINE/$PLATFORM out/latest
