#!/usr/bin/env bash

set -o pipefail


while getopts ":k:p:" opt; do
  case $opt in
    k)
      KERNEL="$OPTARG"  # linux, netbsd, nokernel
    ;;

    p)
      PLATFORM="$OPTARG"  # lxc, qemu, wsl
    ;;
  esac
done


# Default kernel and platform
if [[ -z "$KERNEL" ]]; then
  KERNEL=linux
fi

if [[ -z "$PLATFORM" ]]; then
  PLATFORM=qemu
fi


TOOLCHAIN=`node -p "require('nodeos-cross-toolchain')"`
BAREBONES=`node -p "require('nodeos-barebones')"`
INITRAMFS=`node -p "require('nodeos-initramfs')"`
USERSFS=`  node -p "require('nodeos-usersfs')"`

source $TOOLCHAIN/scripts/adjustEnvVars.sh || exit $?


OUT_DIR=`pwd`/out/$CPU_FAMILY/$MACHINE/$PLATFORM

export MACHINE


#
# Build each layer up
#

( cd $BAREBONES && KERNEL=$kERNEL npm install --arch=$NODE_ARCH --production ) &&
( cd $INITRAMFS &&                npm install --arch=$NODE_ARCH --production ) &&
( cd $USERSFS   &&                npm install --arch=$NODE_ARCH --production ) || exit 10


#
# Wrap the system up and pack it
#

BAREBONES=$BAREBONES/out/$CPU
INITRAMFS=$INITRAMFS/out/$CPU
USERSFS=$USERSFS/out/$CPU.tar.gz

STEP_DIR=$OUT_DIR

mkdir -p $STEP_DIR

function copyAndConvertInitrams() {
  cpio2tar $BAREBONES/barebones.cpio.gz | gzip -c > $STEP_DIR/barebones || err 20
  cpio2tar $INITRAMFS                   | gzip -c > $STEP_DIR/initramfs || err 21
}

case $MACHINE in
  pc)
    case $PLATFORM in
      docker)
        copyAndConvertInitrams || exit $?

        # gunzip $STEP_DIR/barebones -c          | \
        #     tar --delete dev/console sbin/init | \
        #     gzip > $STEP_DIR/barebones.tar.gz  || err 30

        mv $STEP_DIR/barebones $STEP_DIR/barebones.tar.gz || err 30
        mv $STEP_DIR/initramfs $STEP_DIR/initramfs.tar.gz || err 31

        cp $USERSFS $STEP_DIR/usersfs.tar.gz || err 32

        # Delete temporal initrams
        rm -f $STEP_DIR/barebones || err 33
      ;;

      img)
        tar2ext $USERSFS nodeos 1 1 $STEP_DIR/usersfs.img || err 40

        nodeos-bootfs                \
            -F $PLATFORM             \
            -K $BAREBONES/bzImage    \
            -I $INITRAMFS            \
            -O $STEP_DIR/bootfs.img  \
            -U $STEP_DIR/usersfs.img || err 41
      ;;

      iso)
        tar2ext $USERSFS nodeos 1 1 $STEP_DIR/usersfs.img || err 50

        nodeos-bootfs                \
            -F $PLATFORM             \
            -K $BAREBONES/bzImage    \
            -I $INITRAMFS            \
            -O $STEP_DIR/bootfs.iso  \
            -U $STEP_DIR/usersfs.img || err 51
      ;;

      qemu)
        cp $BAREBONES/bzImage $STEP_DIR/kernel            || err 60
        cp $INITRAMFS         $STEP_DIR/initramfs.cpio.gz || err 61

        tar2ext $USERSFS nodeos 1 1 $STEP_DIR/usersfs.img || err 62
      ;;

      tar)
        copyAndConvertInitrams || exit $?

        nodeos-bootfs                  \
            -B $STEP_DIR/barebones     \
            -F $PLATFORM               \
            -I $STEP_DIR/initramfs     \
            -O $STEP_DIR/bootfs.tar.gz || err 70

        cp $USERSFS $STEP_DIR/usersfs.tar.gz || err 71

        # Delete temporal initrams
        rm -f $STEP_DIR/barebones $STEP_DIR/initramfs || err 72
      ;;

      vagga)
        copyAndConvertInitrams || exit $?

        gunzip $STEP_DIR/barebones -c          | \
            tar --delete dev/console sbin/init | \
            gzip > $STEP_DIR/barebones.tar.gz  || err 80

        mv $STEP_DIR/initramfs $STEP_DIR/initramfs.tar.gz || err 81

        cp $USERSFS $STEP_DIR/usersfs.tar.gz || err 82

        # Delete temporal initrams
        rm -f $STEP_DIR/barebones || err 83
      ;;

      *)
        echo -e "${RED}Unknown platform '$PLATFORM'${CLR}"
        err 90
      ;;
    esac
  ;;

  ;;

  *)
    echo -e "${RED}Unknown machine '$MACHINE'${CLR}"
    exit 130
  ;;
esac

ln -sfn $CPU_FAMILY/$MACHINE/$PLATFORM out/latest
