#!/usr/bin/env node

var fs = require('fs')

var Download = require('download')
var got      = require('got')
var progress = require('download-status')

var applyPatch = require('diff').applyPatch


// Source versions

const NODEJS_VERSION = "v4.1.1"  // "v0.11.14"


// Source URLs

const NODEJS_URL="http://nodejs.org/dist/"+NODEJS_VERSION+"/node-"+NODEJS_VERSION+".tar.gz"


//
// Node.js
//

const SRC_DIR = 'deps/node'

fs.exists(SRC_DIR, function(exists)
{
  if(exists) return

  process.stdout.write('Downloading Node.js... ')

  Download({ extract: true, strip: 1 })
  .get(NODEJS_URL, SRC_DIR)
  .use(progress())
  .run(function(error)
  {
    if(error) throw error;

    console.log('Done')

//    // Patch OpenSSL to work with musl
//    const PATCH_URL = 'https://raw.githubusercontent.com/maximeh/buildroot/0400322f2d4e28faa98e31815921f54106aeb2e6/package/openssl/openssl-004-musl-termios.patch'
//
//    got(PATCH_URL, function(error, patch)
//    {
      // if(error) throw error;
      //
      // const fileToPatch = SRC_DIR+'/deps/openssl/openssl/crypto/ui/ui_openssl.c'
      //
      // fs.readFile(fileToPatch, {encoding: 'utf8'}, function(error, fileContent)
      // {
      //   if(error) throw error;
      //
      //   var patchedContent = applyPatch(fileContent, patch)
      //
//        fs.writeFile(fileToPatch, patchedContent, function(error)
//        {
//          if(error) throw error;

          // Allow to inspect NodeOS version from inside Node.js
          try
          {
            var version = require('../../../package.json').version
          }
          catch(e)
          {
            var version = '(unknown)'
          }
          var data = "exports.nodeos = '"+version+"'"

          fs.appendFile(SRC_DIR+'/lib/os.js', data, function(error)
          {
            if(error) throw error;
          })
//        })
//      })
//    })
  })
})
