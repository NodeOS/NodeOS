#!/usr/bin/env node

var join = require('path').join

var fs      = require('fs-extra')
var manager = require('download-manager')


const DEPS='deps'


// Source versions

const BINUTILS_VERSION = "2.25.1"
const GCC_VERSION      = "5.2.0"
const LINUX_VERSION    = "4.4.5"
const MUSL_VERSION     = "1.1.14"


// Source URLs

const BINUTILS_URL = "http://ftpmirror.gnu.org/binutils/binutils-"+BINUTILS_VERSION+".tar.gz"
const GCC_URL      = "http://ftpmirror.gnu.org/gcc/gcc-"+GCC_VERSION+"/gcc-"+GCC_VERSION+".tar.gz"
const LINUX_URL    = "https://www.kernel.org/pub/linux/kernel/v4.x/linux-"+LINUX_VERSION+".tar.gz"
const MUSL_URL     = "http://www.musl-libc.org/releases/musl-"+MUSL_VERSION+".tar.gz"


// Checksums

const LINUX_SHA256 = '7173fc97c0e6def46518fa26f9194b6c2a5f04acd40f5197263f03e74cd7a466'


// Patch GCC to work with musl
const PATCH_URL = 'https://raw.githubusercontent.com/GregorR/musl-cross/master/patches/gcc-'+GCC_VERSION+'-musl.diff'


//
// gcc prerequisites
//

function download_prerequisites(callback)
{
  // Download source code of mpfr, gmp & mpc
//    contrib/download_prerequisites

  var name = this.name

  // Source versions

  const MPFR_VERSION = "3.1.2"
  const GMP_VERSION  = "6.0.0a"
  const MPC_VERSION  = "1.0.2"


  // Source URLs

  const MPFR_URL = "http://ftpmirror.gnu.org/mpfr/mpfr-"+MPFR_VERSION+".tar.bz2"
  const GMP_URL  = "http://ftpmirror.gnu.org/gmp/gmp-"+GMP_VERSION+".tar.bz2"
  const MPC_URL  = "http://ftpmirror.gnu.org/mpc/mpc-"+MPC_VERSION+".tar.gz"


  var downloads =
  [
    {
      name: join(name, 'mpfr'),
      url: MPFR_URL
    },
    {
      name: join(name, 'gmp'),
      url: GMP_URL
    },
    {
      name: join(name, 'mpc'),
      url: MPC_URL
    }
  ]


  manager(downloads, function(error)
  {
    if(error) return callback(error)

    // Check system headers
    fs.exists('/usr/include/rpc/types.h', function(exists)
    {
      if(exists) return callback()

      fs.mkdir('/usr/include/rpc', function(error)
      {
        if(error) return callback(error)

        fs.copy('sunrpc/rpc/*.h', '/usr/include/rpc', callback)
      })
    })
  })
}


//
// binutils, gcc, Linux & musl
//

var downloads =
[
  {
    name: 'binutils',
    url: BINUTILS_URL
  },
  {
    name: 'gcc',
    url: GCC_URL,
    patch:
    {
      url: PATCH_URL,
      strip: 1
    },
    action: download_prerequisites
  },
  {
    name: 'linux',
    url: LINUX_URL,
    sha256: LINUX_SHA256
  },
  {
    name: 'musl',
    url: MUSL_URL
  }
]


manager(downloads, {path: DEPS}, function(error)
{
  if(error) throw error;
})
